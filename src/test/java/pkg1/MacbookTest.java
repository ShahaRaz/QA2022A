package pkg1;// Generated by Selenium IDE

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class MacbookTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    private ReadExcl objExcelFile;
    JavascriptExecutor js;

    @Before
    public void setUp() throws IOException {
        System.setProperty("webdriver.chrome.driver", "C:\\Users\\sagiz\\Downloads\\איכות תוכנה\\selenium\\chromedriver_win32\\chromedriver.exe");
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<>();
        objExcelFile = new ReadExcl();
        objExcelFile.readExcel("C:\\Users\\sagiz\\Downloads\\איכות תוכנה\\excel files", "Search queries.xls", "sheet1");
    }

    @After
    public void tearDown() {
//    driver.quit();
    }

    @Test
    public void macbook() {
        Logger logger = LogManager.getLogger(MacbookTest.class);
        int rowCount = objExcelFile.getRowcount();
        Sheet thsSheet = objExcelFile.getsheet();
        // Test name: macbook
        // Step # | name | target | value
        // 1 | open | /demo/index.php?route=common/home |
        driver.get("http://tutorialsninja.com/demo/index.php?route=common/home");
        // 2 | setWindowSize | 1760x898 |
        driver.manage().window().setSize(new Dimension(1760, 898));
        // 3 | click | name=search |
        driver.findElement(By.name("search")).click();
        // 4 | type | name=search | macbook air

        for (int i = 1; i < rowCount + 1; i++) {

            Row row = thsSheet.getRow(i);

            //Create a loop to print cell values in a row
            if (row.getCell(0).getBooleanCellValue()) {
                logger.info(String.format("Ignoring '%s'", row.getCell(1).getStringCellValue()));
                continue;
            }
            logger.info(String.format("Searching for '%s'", row.getCell(1).getStringCellValue()));

            driver.findElement(By.name("search")).clear();
            driver.findElement(By.name("search")).sendKeys(row.getCell(1).getStringCellValue());
            // 5 | click | css=.btn-default |
            driver.findElement(By.cssSelector("#search > span > button")).click();
            try {
                WebElement addToCart = driver.findElement(By.cssSelector("#content > div:nth-child(8) > div:nth-child(1) > div > div:nth-child(2) > div.button-group > button:nth-child(1)"));
                logger.info(String.format("Buying %f '%s'(s)", row.getCell(2).getNumericCellValue(), row.getCell(1).getStringCellValue()));
                for (int clicks = 0; clicks < row.getCell(2).getNumericCellValue(); clicks++)
                    addToCart.click();
            } catch (NoSuchElementException e) {
                logger.info(String.format("The item '%s' doesn't exist", row.getCell(1).getStringCellValue()));
            }
        }

//        driver.findElement(By.cssSelector("#top-links > ul > li:nth-child(4) > a > span")).click();
//        driver.findElement(By.cssSelector("#content > div.buttons.clearfix > div.pull-right > a")).click();
//
//        WebElement myDynamicElement =
//                (new WebDriverWait(driver, 10)).until(ExpectedConditions.presenceOfElementLocated(By.id("input-email")));
//        // Insert some fake account details
//        myDynamicElement.sendKeys("asa.b123@gmail.com");
//        driver.findElement(By.id("input-password")).sendKeys("Aaq1w2e3r4t5");
//        driver.findElement(By.id("button-login")).click();
//        fillDetailsWithRandomInformationForCheckoutOrder();
    }

    private void fillDetailsWithRandomInformationForCheckoutOrder() {
        (new WebDriverWait(driver, 10)).until(ExpectedConditions.presenceOfElementLocated(By.id("input-payment-firstname"))).sendKeys("Asa");
        driver.findElement(By.id("input-payment-lastname")).sendKeys("Basa");
        driver.findElement(By.id("input-payment-address-1")).sendKeys("Something classified");
        driver.findElement(By.id("input-payment-city")).sendKeys("Brazil");
        driver.findElement(By.id("input-payment-postcode")).sendKeys("1010220");

        new Select(driver.findElement(By.id("input-payment-country"))).selectByVisibleText("Israel");
        new Select(driver.findElement(By.id("input-payment-zone"))).selectByVisibleText("Tel Aviv");

    }
}